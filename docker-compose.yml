
services:
  # Fragments microservice API server
  fragments:
    init: true
    build: .
    environment:
      - API_URL=http://localhost:3000
      - HTPASSWD_FILE=tests/.htpasswd
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - PORT=3000
      # --- S3 (LocalStack) ---
      - AWS_S3_BUCKET_NAME=fragments
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_SESSION_TOKEN=test
      - AWS_REGION=us-east-1
      - AWS_S3_ENDPOINT_URL=http://localstack:4566
      # --- DynamoDB Local ---
      - AWS_DYNAMODB_ENDPOINT_URL=http://dynamodb-local:8000
      - AWS_DYNAMODB_TABLE_NAME=${AWS_DYNAMODB_TABLE_NAME:-fragments}
    ports:
      - "3000:3000"
    depends_on:
      localstack:
        condition: service_healthy
      dynamodb-local:
        condition: service_healthy
    command: ["node", "src/index.js"]
    restart: unless-stopped

  # DynamoDB Local
  dynamodb-local:
    image: amazon/dynamodb-local
    ports:
      - "8000:8000"
    command: ["-jar", "DynamoDBLocal.jar", "-inMemory", "-sharedDb"]
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost:8000/shell/ >/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 5s

  # LocalStack for S3
  localstack:
    image: localstack/localstack
    container_name: localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      # DEFAULT_REGION is deprecated; use AWS_REGION in the app instead
      - LS_LOG=warn
    healthcheck:
      test: ["CMD", "sh", "-c", "curl -fsS http://localhost:4566/health | grep -q '\"s3\": *\"available\"'"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 5s
    restart: unless-stopped
